# type: ignore

import subprocess
import sys

import setuptools

try:
    # Added in v62.4.0, 2022-06-13
    # https://setuptools.pypa.io/en/latest/history.html#v62-4-0
    from setuptools.command import build
except ImportError:
    from distutils.command import build


with open("README.md", "r") as fh:
    long_description = fh.read()

# A .dev{n} suffix is added to non-release builds in Github Actions
# See `ci/count-git-commits.py`, `.github/workflows/*`.
version = "33.0.0"


class BuildCustom(build.build):
    sub_commands = [
        ("build_bindgen", None),
        *build.build.sub_commands,
    ]


class BuildBindgen(build.build):
    description = "build bindgen tool and generate wasmtime.bindgen.generated"

    def initialize_options(self) -> None:
        super().initialize_options()

    def finalize_options(self) -> None:
        super().finalize_options()

    def run(self):
        subprocess.run([sys.executable, 'ci/build-rust.py'], check=True)


setuptools.setup(
    name="wasmtime",
    version=version,
    author="The Wasmtime Project Developers",
    author_email="hello@bytecodealliance.org",
    description="A WebAssembly runtime powered by Wasmtime",
    long_description=long_description,
    long_description_content_type="text/markdown",
    license="Apache-2.0 WITH LLVM-exception",
    url="https://github.com/bytecodealliance/wasmtime-py",
    project_urls={
        "Bug Tracker": "https://github.com/bytecodealliance/wasmtime-py/issues",
        "Documentation": "https://bytecodealliance.github.io/wasmtime-py/",
        "Source Code": "https://github.com/bytecodealliance/wasmtime-py",
    },
    packages=[
        'wasmtime',
        'wasmtime.bindgen',
        'wasmtime.bindgen.generated',  # Generated by build_bindgen
        'wasmtime.bindgen.generated.imports',  # Generated by build_bindgen
    ],
    install_requires=['importlib_resources>=5.10'],
    include_package_data=True,
    package_data={
        "wasmtime": [
            # wasmtime shared library. Downloaded by ci/download-wasmtime.py
            # <platform>-<arch>/{_libwasmtime,wasmtime,...}.{.dll,dylib,so,...}
            "*-*/*.dll",
            "*-*/*.dylib",
            "*-*/*.so",
            "py.typed",
        ],
        "wasmtime.bindgen.generated": [
            "*.wasm",  # Generated by build_bindgen
        ],
    },
    cmdclass={
        "build": BuildCustom,
        "build_bindgen": BuildBindgen,
    },
    python_requires='>=3.9',
    test_suite="tests",
    extras_require={
        'testing': [
            'coverage',
            'pytest',
            'pycparser',
            'pytest-mypy',
            # componentize-py only support x86_64 builds on Windows
            # platform.machine() on Windows returns 'AMD64' for x86_64
            "componentize-py; platform_system != 'Windows' or platform_machine == 'AMD64'",
        ],
    },
    classifiers=[
        'Programming Language :: Python',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
        'Programming Language :: Python :: 3.13',
        'Programming Language :: Python :: Implementation :: CPython',
        'Programming Language :: Python :: Implementation :: PyPy',
        'Topic :: Software Development :: Compilers',
        'Topic :: Software Development :: Interpreters',
        'Programming Language :: Rust',
    ]
)
